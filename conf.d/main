#!/bin/sh -ex

DB_NAME=gitlab_production
DB_USER=gitlab
DB_PASS=$(mcookie)

ADMIN_MAIL=admin@example.com
ADMIN_PASS=turnkey
DOMAIN=git.example.com

GIT=/home/git
GITLAB=/home/gitlab

SRC=/usr/local/src

exec_git() {
    sudo -u git -H sh -c "PATH=\$PATH:$GIT/bin; $@"
}

exec_gitlab() {
    sudo -u gitlab -H sh -c "$@"
}

# unpack and install ruby19 (if pre-build is available, use it)
if [ -e $SRC/ruby-1.9.*-build.tar.gz ]; then
    tar -zxf $SRC/ruby-1.9.*-build.tar.gz -C $SRC
    cd $SRC/ruby-1.9.*
    make install
else
    tar -zxf $SRC/ruby-1.9.*.tar.gz -C $SRC
    cd $SRC/ruby-1.9.*
    ./configure
    make
    make install
fi

# install rubygems
tar -zxf $SRC/rubygems-*.tgz -C $SRC
cd $SRC/rubygems-*
ruby setup.rb

# install gems
cd $SRC/gems
gem install --local --no-rdoc --no-ri *.gem

# install backported python-passlib
dpkg -i $SRC/python-passlib_*.deb

# create users
adduser --system --shell /bin/sh --group --disabled-password --home $GIT git
adduser --disabled-login --ingroup git --gecos 'gitlab' gitlab

# install gitolite
exec_git "tar -zxf $SRC/gitlabhq-gitolite-*.tar.gz -C $GIT"
exec_git "mv $GIT/gitlabhq-gitolite-* $GIT/gitolite"

exec_git "cat >$GIT/.profile<<EOF
PATH=\$PATH:/home/git/bin
export PATH
EOF"

exec_git "$GIT/gitolite/src/gl-system-install"
exec_git "sed -i 's/0077/0007/g' $GIT/share/gitolite/conf/example.gitolite.rc"

# setup gitlab ssh related and permissions
exec_gitlab "ssh-keygen -q -N '' -t rsa -f $GITLAB/.ssh/id_rsa"
exec_gitlab "cat >$GITLAB/.ssh/config<<EOF
Host localhost
    StrictHostKeyChecking no
EOF"

cp $GITLAB/.ssh/id_rsa.pub $GIT/gitlab.pub
chmod 777 $GIT/gitlab.pub
exec_git "gl-setup -q $GIT/gitlab.pub"

chmod -R g+rwX $GIT/repositories/
chown -R git:git $GIT/repositories/

# start services
/etc/init.d/mysql start
/etc/init.d/redis-server start

# setup database
MYSQL_BATCH="mysql --user=root --password=$MYSQL_PASS --batch"
MYSQL_ADMIN="mysqladmin --user=root --password=$MYSQL_PASS"

$MYSQL_ADMIN create $DB_NAME --default-character-set=utf8;
$MYSQL_BATCH --execute "grant all privileges on $DB_NAME.* to $DB_USER@localhost identified by '$DB_PASS'; flush privileges;"

# setup gitlab
exec_gitlab "tar -zxf $SRC/gitlab-*.tar.gz -C $GITLAB"

exec_gitlab "cat >$GITLAB/gitlab/config/gitlab.yml<<EOF
# Gitlab application config file

# Email used for notification about new issues, comments
# Protocol is for links in emails (http or https)
email:
  from: $ADMIN_MAIL
  host: localhost
  protocol: http

# Git Hosting configuration
git_host:
  system: gitolite
  admin_uri: git@localhost:gitolite-admin
  base_path: $GIT/repositories/
  host: $DOMAIN
  git_user: git
  # port: 22

# Git settings
# Max size of git object like commit in bytes
# Timeout to read commit in seconds
git:
  git_max_size: 5242880 # 5MB
  git_timeout: 10
EOF"

exec_gitlab "cat >$GITLAB/gitlab/config/database.yml<<EOF
production:
  adapter: mysql2
  encoding: utf8
  reconnect: false
  database: $DB_NAME
  username: $DB_USER
  password: $DB_PASS
  pool: 5
EOF"
chmod 640 $GITLAB/gitlab/config/database.yml

exec_gitlab "cat >$GITLAB/gitlab/db/fixtures/production/001_admin.rb<<EOF
admin = User.create(
  :email => \"$ADMIN_MAIL\",
  :name => \"Administrator\",
  :password => \"$ADMIN_PASS\",
  :password_confirmation => \"$ADMIN_PASS\"
)

admin.projects_limit = 10000
admin.admin = true
admin.save!
EOF"

exec_gitlab "cat >>$GITLAB/gitlab/app/views/layouts/application.html.haml<<EOF
<div id='turnkey-credit' style='font-size:10px;text-align:center;padding-top:20px'><a href='http://www.turnkeylinux.org/gitlab'>GitLab Appliance</a> - Powered by <a href='http://www.turnkeylinux.org'>TurnKey Linux</a></div>
EOF"

cd $GITLAB/gitlab
exec_gitlab "mv Gemfile.lock Gemfile.lock.orig"
exec_gitlab "mv Gemfile Gemfile.orig"

line_no=$(grep -n "group :development do" Gemfile.orig | cut -d: -f1)
head -n $((${line_no}-1)) Gemfile.orig > Gemfile
sed -i "s|, :git =>.*||" Gemfile

exec_gitlab "mkdir -p vendor/cache"
exec_gitlab "cp $SRC/gems/*.gem vendor/cache/"

exec_gitlab "bundle install --local --without development test --no-deployment"
exec_gitlab "bundle install --local --without development test --deployment"
exec_gitlab "bundle exec rake db:setup RAILS_ENV=production"
exec_gitlab "bundle exec rake db:seed_fu RAILS_ENV=production"

# setup unicorn and nginx
mv $GITLAB/gitlab/config/unicorn.rb.orig $GITLAB/gitlab/config/unicorn.rb

rm /etc/nginx/sites-enabled/default
ln -s /etc/nginx/sites-available/gitlab /etc/nginx/sites-enabled/gitlab

# setup gitlab initscript
update-rc.d gitlab defaults

# stop services
/etc/init.d/mysql stop
/etc/init.d/redis-server stop

# cleanup
rm -rf $SRC/*

